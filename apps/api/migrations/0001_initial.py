# Generated by Django 3.0.7 on 2020-08-22 18:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text='用于以后在腾讯对象存储中删除', max_length=128, verbose_name='腾讯对象存储中的文件名')),
                ('cos_path', models.CharField(max_length=128, verbose_name='腾讯对象存储中图片路径')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='书名')),
                ('author', models.CharField(max_length=32, verbose_name='作者')),
                ('press', models.CharField(max_length=32, verbose_name='出版社')),
                ('label', models.CharField(max_length=32, verbose_name='标签')),
                ('age', models.CharField(default='3-6岁', max_length=32, verbose_name='适宜岁数')),
                ('score', models.DecimalField(decimal_places=1, default=0, max_digits=2, verbose_name='综合评分')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, '仍有库存'), (2, '暂无存货')], default=1, verbose_name='状态')),
                ('cover', models.CharField(max_length=128, verbose_name='封面')),
                ('content', models.CharField(max_length=255, verbose_name='商品简介')),
                ('remain_count', models.PositiveIntegerField(default=1, verbose_name='库存')),
                ('borrowed_count', models.PositiveIntegerField(default=0, verbose_name='总借出次数')),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(1, '未开始'), (2, '领取中'), (3, '已结束')], default=1, verbose_name='状态')),
                ('title', models.CharField(max_length=32, verbose_name='优惠券名称')),
                ('money', models.PositiveIntegerField(default=200, verbose_name='抵扣金额')),
                ('count', models.PositiveIntegerField(default=100, verbose_name='创建数量')),
                ('apply_count', models.PositiveIntegerField(default=0, verbose_name='已申请数量')),
                ('apply_start_date', models.DateTimeField(verbose_name='开始领取时间')),
                ('apply_stop_date', models.DateTimeField(verbose_name='领取结束时间')),
                ('apply_start_task_id', models.CharField(blank=True, max_length=64, null=True, verbose_name='celery任务ID')),
                ('apply_stop_task_id', models.CharField(blank=True, max_length=64, null=True, verbose_name='celery任务ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='是否删除')),
            ],
        ),
        migrations.CreateModel(
            name='DepositRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, '未支付'), (2, '已支付')], default=1, verbose_name='状态')),
                ('uid', models.CharField(max_length=64, verbose_name='流水号')),
                ('pay_type', models.SmallIntegerField(choices=[(1, '微信'), (2, '余额')], verbose_name='支付方式')),
                ('amount', models.PositiveIntegerField(verbose_name='金额')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.CharField(max_length=128, verbose_name='封面')),
                ('content', models.CharField(max_length=255, verbose_name='内容')),
                ('address', models.CharField(blank=True, max_length=128, null=True, verbose_name='位置')),
                ('favor_count', models.PositiveIntegerField(default=0, verbose_name='赞数')),
                ('viewer_count', models.PositiveIntegerField(default=0, verbose_name='浏览数')),
                ('comment_count', models.PositiveIntegerField(default=0, verbose_name='评论数')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.PositiveSmallIntegerField(choices=[(1, '图书'), (2, '押金'), (3, '会员卡')], default=1, verbose_name='订单类型')),
                ('order_status', models.PositiveSmallIntegerField(choices=[(1, '待支付'), (2, '已支付'), (3, '已完成'), (4, '已取消')], default=1, verbose_name='订单状态')),
                ('out_trade_no', models.CharField(default='', max_length=32, verbose_name='商户订单号')),
                ('order_array', models.CharField(default='', max_length=256, verbose_name='订单列表')),
                ('price', models.PositiveIntegerField(verbose_name='价格')),
                ('lend_date', models.CharField(default='', max_length=32, verbose_name='借阅时间')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('pay_type', models.SmallIntegerField(blank=True, choices=[(1, '微信'), (2, '会员卡'), (3, '余额')], default=1, null=True, verbose_name='支付方式')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='话题')),
                ('count', models.PositiveIntegerField(default=0, verbose_name='关注度')),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telephone', models.CharField(max_length=11, verbose_name='手机号')),
                ('nickname', models.CharField(max_length=64, verbose_name='昵称')),
                ('avatar', models.CharField(max_length=64, null=True, verbose_name='头像')),
                ('token', models.CharField(max_length=64, verbose_name='用户Token')),
                ('fans_count', models.PositiveIntegerField(default=0, verbose_name='粉丝个数')),
                ('balance', models.PositiveIntegerField(default=1000, verbose_name='账户余额')),
                ('session_key', models.CharField(max_length=32, verbose_name='微信会话秘钥')),
                ('openid', models.CharField(max_length=32, verbose_name='微信用户唯一标识')),
                ('deposit', models.BooleanField(default=False, verbose_name='是否已缴纳押金')),
                ('follow', models.ManyToManyField(blank=True, related_name='_userinfo_follow_+', to='api.UserInfo', verbose_name='关注')),
            ],
        ),
        migrations.CreateModel(
            name='Vip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.PositiveSmallIntegerField(choices=[(1, '普通用户'), (2, '年卡会员'), (3, '月卡会员'), (4, '12次卡会员')], default=1, verbose_name='身份')),
                ('book_count', models.PositiveSmallIntegerField(default=0, verbose_name='已借绘本数')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('deposit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.DepositRecord', verbose_name='押金')),
            ],
        ),
        migrations.CreateModel(
            name='ViewerRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.News', verbose_name='动态')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.UserInfo', verbose_name='用户')),
            ],
        ),
        migrations.AddField(
            model_name='userinfo',
            name='vip',
            field=models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Vip', verbose_name='会员卡'),
        ),
        migrations.CreateModel(
            name='UserCoupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(1, '未使用'), (2, '已使用'), (3, '已过期')], default=1, verbose_name='状态')),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Coupon', verbose_name='优惠券')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Order', verbose_name='订单')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.UserInfo', verbose_name='用户')),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingCartRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checked', models.BooleanField(default=False, verbose_name='是否选中')),
                ('book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Book', verbose_name='图书')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.UserInfo', verbose_name='用户')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.UserInfo', verbose_name='用户'),
        ),
        migrations.CreateModel(
            name='NewsFavorRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.News', verbose_name='动态')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.UserInfo', verbose_name='点赞用户')),
            ],
        ),
        migrations.CreateModel(
            name='NewsDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text='用于以后在腾讯对象存储中删除', max_length=128, verbose_name='腾讯对象存储中的文件名')),
                ('cos_path', models.CharField(max_length=128, verbose_name='腾讯对象存储中图片路径')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.News', verbose_name='动态')),
            ],
        ),
        migrations.AddField(
            model_name='news',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Topic', verbose_name='话题'),
        ),
        migrations.AddField(
            model_name='news',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news', to='api.UserInfo', verbose_name='发布者'),
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255, verbose_name='评价内容')),
                ('score', models.DecimalField(decimal_places=1, max_digits=2, verbose_name='评分')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='评价时间')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Book', verbose_name='图书')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.UserInfo', verbose_name='用户')),
            ],
        ),
        migrations.CreateModel(
            name='DepositRefundRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=64, verbose_name='流水号')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, '待退款'), (2, '退款成功')], verbose_name='状态')),
                ('amount', models.PositiveIntegerField(verbose_name='退款金额')),
                ('deposit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.DepositRecord', verbose_name='押金')),
            ],
        ),
        migrations.AddField(
            model_name='depositrecord',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.UserInfo', verbose_name='用户'),
        ),
        migrations.CreateModel(
            name='DepositDeduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(verbose_name='金额')),
                ('deduct_type', models.SmallIntegerField(choices=[(1, '逾期扣款'), (2, '支付抵扣')], default=1, verbose_name='扣款类型')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Order', verbose_name='订单')),
            ],
        ),
        migrations.CreateModel(
            name='CommentRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255, verbose_name='评论内容')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='评论时间')),
                ('depth', models.PositiveIntegerField(default=1, verbose_name='评论层级')),
                ('favor_count', models.PositiveIntegerField(default=0, verbose_name='赞数')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.News', verbose_name='动态')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.CommentRecord', verbose_name='回复')),
                ('root', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='descendant', to='api.CommentRecord', verbose_name='根评论')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.UserInfo', verbose_name='评论者')),
            ],
        ),
        migrations.CreateModel(
            name='CommentFavorRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.CommentRecord', verbose_name='动态')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.UserInfo', verbose_name='点赞用户')),
            ],
        ),
        migrations.CreateModel(
            name='BookItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_num', models.CharField(max_length=32, verbose_name='专属编号')),
                ('borrower_count', models.PositiveIntegerField(default=0, verbose_name='单本借出次数')),
                ('borrowed', models.BooleanField(default=False, verbose_name='已借出')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Book', verbose_name='图书')),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='api.UserInfo', verbose_name='所属用户')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='收货人姓名')),
                ('phone', models.CharField(max_length=11, verbose_name='联系电话')),
                ('detail', models.CharField(max_length=255, verbose_name='收货地址')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.UserInfo', verbose_name='用户')),
            ],
        ),
        migrations.CreateModel(
            name='BorrowerRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Book', verbose_name='图书')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.UserInfo', verbose_name='用户')),
            ],
            options={
                'unique_together': {('book', 'user')},
            },
        ),
    ]
